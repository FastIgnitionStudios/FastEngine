using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using FastReflection.Types;

namespace FastReflection.CodeGen
{
    public class HeaderSourceGenerator
    {
        public void GenerateReflectionCode(List<ReflectedClass> classes, string outputDir)
        {
            foreach (var reflectedClass in classes)
            {
                GenerateHeaderFile(reflectedClass, outputDir);
            }
        }

        public void GenerateHeaderFile(ReflectedClass reflectedClass, string outputDir)
        {
            var sb = new StringBuilder();
            
            sb.AppendLine("// Auto generated by FastReflection");
            sb.AppendLine("");
            sb.AppendLine("#pragma once");
            sb.AppendLine();
            
            // Generate type registration declaration
            sb.AppendLine($"// Reflection data for: {reflectedClass.Name} in namespace: {reflectedClass.Namespace}");
            
            var outputPath = Path.Combine(outputDir, $"{reflectedClass.Name}_RGen.h");
            File.WriteAllText(outputPath, sb.ToString());
        }
        
        
        
    }
}